@using Capstone.Web.Models;
@model Tuple<Park, WeatherChoice>
@{
    ViewBag.Title = "Detail";
}

<div class="carousel-item">
    <img src="@Url.Content("~/Content/img/park/" + Model.Item1.ParkCode + ".jpg")" />
    <div class="carousel-caption d-none d-md-block">
        <h3 id="detail-park">@Model.Item1.Name</h3>
        <p id="detail-quote">@Model.Item1.InspirationalQuote  -@Model.Item1.InspirationalQuoteSource</p>
        <p><a href="TakeSurvey" class="btn btn-primary btn-lg">Vote</a></p>
    </div>
</div>

<table class="table-condensed">
    <tr>
        <td class="about-the-park">@Model.Item1.Name is located in @Model.Item1.State, the park was founded in @Model.Item1.YearFounded. It is made up of @Model.Item1.Acreage acres of @Model.Item1.Climate land.</td>
    </tr>
    <tr>
        <td class="about-the-park">About The Park:</td>
    </tr>
    <tr>
        <td>@Model.Item1.Description</td>
    </tr>
    <tr>
        <td class="extra"><span class="title">Number of campsites:</span> @Model.Item1.NumberOfCampsites <span class="title">|</span> <span class="title">Fee:</span> @Model.Item1.EntryFee.ToString("C")</td>
    </tr>
    <tr>
        <td class="extra"><span class="title">Total Elevation:</span> @Model.Item1.ElevationInFeet.ToString("#,##0") ft  <span class="title">|</span> <span class="title">Miles of trails:</span> @Model.Item1.MilesOfTrail</td>
    </tr>
    <tr>
        <td class="extra"><span class="title">Number of animal species:</span> @Model.Item1.NumberOfAnimalSpecies <span class="title">|</span> <span class="title">Number of annual visitors:</span> @Model.Item1.AnnualVisitorCount.ToString("#,##0")</td>
    </tr>
</table>

<h2>5 Day Forecast</h2>
<div class="row">
    @foreach (var item in Model.Item1.Weather)
    {
        <div class="col-md-2">
            <div class="thumbnail">
                <img src="@Url.Content("~/Content/img/weather/" + item.Forecast + ".png")" />
                <div class="caption">
                    <h6 class="forecast">@item.Forecast</h6>

                    @if (Model.Item2.ChoiceTemp == "Celcius")
                    {
                        <p><span class="temp">High:</span> @((Math.Round(((item.High - 32) * .5556), 0))) C°</p>
                        <p><span class="temp">Low:</span> @((Math.Round(((item.Low - 32) * .5556), 0))) C°</p>

                    }
                    else
                    {
                        <p><span class="temp">High:</span> @item.High F°</p>
                        <p><span class="temp">Low:</span> @item.Low F°</p>
                    }

                    @if (item.High > 75 && item.High - item.Low > 20)
                    {
                        if (item.Forecast == "rain")
                        {
                            <p>Pack rain gear and wear waterproof shoes</p>
                        }
                        else if (item.Forecast == "thunderstorms")
                        {
                            <p>Seek shelter, avoid hiking on exposed ridges</p>
                        }
                        else if (item.Forecast == "sun")
                        {
                            <p>Pack sunblock</p>
                        }
                        <p>Wear breathable layers</p>
                    }
                    else if (item.High > 75)
                    {
                        if (item.Forecast == "rain")
                        {
                            <p>Pack rain gear and wear waterproof shoes</p>
                        }
                        else if (item.Forecast == "thunderstorms")
                        {
                            <p>Seek shelter, avoid hiking on exposed ridges</p>
                        }
                        else if (item.Forecast == "sun")
                        {
                            <p>Pack sunblock</p>
                        }

                        <p>Bring an extra gallon of water, It'll be hot!</p>
                    }
                    else if (item.High < 75 && item.High - item.Low > 20)
                    {

                        if (item.Forecast == "rain")
                        {
                            <p>Pack rain gear and wear waterproof shoes</p>
                        }
                        else if (item.Forecast == "thunderstorms")
                        {
                            <p>Seek shelter, avoid hiking on exposed ridges</p>
                        }
                        else if (item.Forecast == "sun")
                        {
                            <p>Pack sunblock</p>
                        }
                        <p>Wear breathable layers</p>
                    }
                    else if (item.High < 75)
                    {
                        if (item.Forecast == "rain")
                        {
                            <p>Pack rain gear and wear waterproof shoes</p>
                        }
                        else if (item.Forecast == "thunderstorms")
                        {
                            <p>Seek shelter, avoid hiking on exposed ridges</p>
                        }
                        else if (item.Forecast == "sun")
                        {
                            <p>Pack sunblock</p>
                        }
                        else if (item.Forecast == "snow")
                        {
                            <p>Make sure you pack snowshoes</p>
                        }
                    }
                    else if (item.Low < 20)
                    {
                        if (item.Forecast == "snow")
                        {
                            <p>Make sure you pack snowshoes</p>
                        }
                        <p>Danger if exposed to frigid temperatures</p>
                    }



                </div>

            </div>
        </div>
    }
    <div class="col-md-2">
        <form action="@Url.Action("Detail", "Home")" method="get">
            <div class="choice">
                @Html.RadioButton("ChoiceTemp", "Fahrenheit", new { @class = "radio" }) Fahrenheit
                @Html.RadioButton("ChoiceTemp", "Celcius", new { @class = "radio" }) Celcius
                @Html.Hidden("ParkCode", Model.Item1.ParkCode)
            </div>
            <button>Submit</button>
        </form>
    </div>
</div>

